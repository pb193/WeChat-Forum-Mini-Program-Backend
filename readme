微信论坛小程序后端 / WeChat Forum Mini-Program Backend
概述 / Overview
中文
这是一个为微信论坛小程序设计的后端服务，基于 Node.js 和 Express.js 构建。它提供用户管理、帖子管理、评论功能、通知发布、文件上传以及管理员操作等功能，支持 JWT 认证和 Sequelize ORM 数据库操作。适用于社交论坛场景，支持普通用户、吧主（moderator）和超级管理员（admin）三种角色。

当前版本: 1.0

最后更新: 2025年3月28日

English
This is a backend service designed for a WeChat forum mini-program, built with Node.js and Express.js. It provides user management, post management, commenting, notice posting, file uploading, and admin operations, with JWT authentication and Sequelize ORM for database management. Suitable for social forum scenarios, it supports three roles: regular users, moderators, and admins.

Current Version: 1.0

Last Updated: March 28, 2025

功能 / Features
中文
用户管理:
用户注册、登录（调试模式支持快速登录）。
更新个人资料（头像、年级、院系等）。
查看用户信息（普通用户、吧主、管理员权限分级）。
帖子管理:
创建、删除帖子（支持匿名发布和多媒体文件）。
点赞、取消点赞帖子。
查看帖子列表（按类别、用户、时间排序）。
举报和取消举报帖子。
评论管理:
添加、删除评论（支持用户自删和管理员操作）。
查看帖子评论和用户评论历史。
通知管理:
吧主或管理员发布、删除通知。
查看所有通知。
管理员功能:
删除帖子和评论（吧主和管理员）。
禁言/解除禁言用户（吧主和管理员）。
封禁/解禁用户（仅管理员）。
查看操作日志和系统统计（仅管理员）。
文件上传:
支持头像和帖子附件上传（最多 10 个文件）。
安全性:
JWT 认证保护所有路由。
角色权限控制（用户、吧主、管理员）。
English
User Management:
User registration and login (debug mode for quick login).
Update personal profile (avatar, grade, department, etc.).
View user info (tiered permissions for users, moderators, admins).
Post Management:
Create and delete posts (supports anonymous posting and multimedia).
Like/unlike posts.
View post lists (sorted by category, user, or time).
Report/cancel reporting posts.
Comment Management:
Add/delete comments (self-deletion and admin actions).
View post comments and user comment history.
Notice Management:
Moderators/admins can post/delete notices.
View all notices.
Admin Features:
Delete posts/comments (moderators and admins).
Mute/unmute users (moderators and admins).
Ban/unban users (admins only).
View operation logs and system stats (admins only).
File Upload:
Supports avatar and post attachment uploads (up to 10 files).
Security:
JWT authentication for all routes.
Role-based access control (user, moderator, admin).
要求 / Requirements
中文
操作系统: Windows、Linux 或 macOS。
Node.js 版本: 16.x 或更高。
数据库: PostgreSQL、MySQL 或其他 Sequelize 支持的数据库。
依赖项:
express（Web 框架）
jsonwebtoken（JWT 认证）
sequelize（ORM）
multer（文件上传）
其他依赖详见 package.json。
环境变量: JWT_SECRET（JWT 密钥）。
English
Operating System: Windows, Linux, or macOS.
Node.js Version: 16.x or higher.
Database: PostgreSQL, MySQL, or other Sequelize-supported databases.
Dependencies:
express (Web framework)
jsonwebtoken (JWT authentication)
sequelize (ORM)
multer (File upload)
See package.json for full list.
Environment Variables: JWT_SECRET (JWT secret key).
安装 / Installation
中文
安装 Node.js: 确保已安装 Node.js 16+（下载地址)。
克隆项目:
bash

Collapse

Wrap

Copy
git clone https://github.com/pb193/WeChatForum1.git
cd WeChatForum1
安装依赖:
bash

Collapse

Wrap

Copy
npm install
配置环境变量:
创建 .env 文件，添加：
text

Collapse

Wrap

Copy
JWT_SECRET=your-secret-key
DATABASE_URL=your-database-connection-string
配置数据库:
初始化数据库并创建表（见下文“数据库结构”）。
配置 Sequelize 连接（修改 global.db 初始化代码）。
运行程序:
bash

Collapse

Wrap

Copy
node server.js
默认监听 http://localhost:3000。
English
Install Node.js: Ensure Node.js 16+ is installed (download here).
Clone the Project:
bash

Collapse

Wrap

Copy
git clone https://github.com/pb193/WeChatForum1.git
cd WeChatForum1
Install Dependencies:
bash

Collapse

Wrap

Copy
npm install
Configure Environment Variables:
Create a .env file with:
text

Collapse

Wrap

Copy
JWT_SECRET=your-secret-key
DATABASE_URL=your-database-connection-string
Configure Database:
Initialize the database and create tables (see “Database Schema” below).
Configure Sequelize connection (modify global.db initialization code).
Run the Application:
bash

Collapse

Wrap

Copy
node server.js
Runs by default at http://localhost:3000.
使用指南 / Usage Guide
中文
启动服务: 运行 node server.js，访问 http://localhost:3000。
调试登录:
POST /debug-login 创建测试用户并获取 JWT token。
帖子操作:
GET /posts 查看帖子。
POST /posts 创建新帖子。
DELETE /posts/:id 删除帖子。
管理员操作:
DELETE /admin/posts/:id 删除帖子（吧主/管理员）。
POST /admin/mute-user/:id 禁言用户。
GET /admin/logs 查看操作日志（仅管理员）。
文件上传:
POST /upload/avatar 上传头像。
POST /upload 上传帖子附件。
English
Start the Service: Run node server.js and visit http://localhost:3000.
Debug Login:
POST /debug-login to create a test user and get a JWT token.
Post Operations:
GET /posts to view posts.
POST /posts to create a new post.
DELETE /posts/:id to delete a post.
Admin Operations:
DELETE /admin/posts/:id to delete posts (moderator/admin).
POST /admin/mute-user/:id to mute a user.
GET /admin/logs to view logs (admin only).
File Upload:
POST /upload/avatar to upload an avatar.
POST /upload to upload post attachments.
数据库结构 / Database Schema
以下是主要表结构（基于 Sequelize，使用 MySQL/PostgreSQL 示例）：

Users 表
id (INTEGER, 主键, 自增)
username (STRING, 唯一)
password (STRING)
avatar (STRING)
grade (STRING)
department (STRING)
bio (STRING)
role (ENUM: 'user', 'moderator', 'admin', 'banned')
muteUntil (DATE)
Posts 表
id (INTEGER, 主键, 自增)
userId (INTEGER, 外键 -> Users.id)
category (STRING)
content (TEXT)
mediaFiles (JSON)
isAnonymous (BOOLEAN)
username (STRING)
avatar (STRING)
likedBy (JSON)
createdAt (DATE)
Comments 表
id (INTEGER, 主键, 自增)
postId (INTEGER, 外键 -> Posts.id)
userId (INTEGER, 外键 -> Users.id)
username (STRING)
content (TEXT)
createdAt (DATE)
Notices 表
id (INTEGER, 主键, 自增)
userId (INTEGER, 外键 -> Users.id)
content (TEXT)
createdAt (DATE)
Logs 表
id (INTEGER, 主键, 自增)
adminId (INTEGER, 外键 -> Users.id)
action (STRING)
targetId (INTEGER)
targetType (STRING)
createdAt (DATE)
注意事项 / Notes
中文
JWT 密钥: 未设置 JWT_SECRET 将导致认证失败。
数据库: 确保数据库连接正确配置。
文件存储: 默认存储在 uploads/ 目录，生产环境建议使用云存储。
安全性: 生产环境需启用 HTTPS 并限制文件类型。
English
JWT Secret: Missing JWT_SECRET will cause authentication failures.
Database: Ensure correct database connection setup.
File Storage: Defaults to uploads/ directory; use cloud storage in production.
Security: Enable HTTPS and restrict file types in production.
